// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id  @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("upadated_at")

  email String @unique
  name  String
  password String
  images String[]

  // Добавляем отношение к упражнениям
  exercises  Exercise[]
  // Связь с тренировками
  workouts   Workout[]
}

model Exercise{
  id Int @id  @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("upadated_at")

  name String @unique
  sets Int
  exerciseType String? @map("exercise_type")

  exerciseLog ExerciseLog[] // Связь с мостовой таблицей
  workouts Workout[]
  // Внешний ключ на пользователя и связь
  userId       Int
  user         User        @relation(fields: [userId], references: [id])

}

model Workout{
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  name        String
  isCompleted Boolean       @default(false) // Завершение всей тренировки
  exercise Exercise[]

  userId      Int
  user        User          @relation(fields: [userId], references: [id])

  exerciseLog   ExerciseLog[]
}

model ExerciseLog {
  id          Int           @id @default(autoincrement())
  workoutId   Int

  workout     Workout       @relation(fields: [workoutId], references: [id])

  exerciseId  Int
  exercise    Exercise      @relation(fields: [exerciseId], references: [id])

  isCompleted Boolean       @default(false) // Выполнение упражнения в рамках тренировки
  sets        ExerciseSet[]
}

model ExerciseSet{
  id              Int           @id @default(autoincrement())
  weight          Int
  repetitions     Int

  exerciseLog ExerciseLog @relation(fields: [exerciseLogId], references: [id])
  exerciseLogId Int
}
